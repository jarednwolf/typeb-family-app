const { initializeTestEnvironment } = require('@firebase/rules-unit-testing'); const { readFileSync } = require('fs'); let testEnv; beforeAll(async () => { let rules=''; try { rules=readFileSync('firestore.rules','utf8'); } catch(e) { rules=''; } if(!rules||!rules.trim()){ rules="rules_version = '2'; service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if false; } } }"; } testEnv = await initializeTestEnvironment({ projectId: 'demo-typeb', firestore: { rules } }); }); afterAll(async () => { if(testEnv){ await testEnv.cleanup(); } }); test('denies unauthenticated writes', async () => { const ctx = testEnv.unauthenticatedContext(); const db = ctx.firestore(); await expect(db.collection('families').doc('x').set({ ownerId: 'u' })).rejects.toThrow(); });